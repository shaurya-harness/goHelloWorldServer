pipeline:
  identifier: Build_shaurya_harness_goHelloWorldServer_1709891168851
  name: Build goHelloWorldServer
  orgIdentifier: default
  projectIdentifier: shauryatesting
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: account.oauthsk
        repoName: shaurya-harness/goHelloWorldServer
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  identifier: gobuild
                  name: go_build
                  spec:
                    shell: Sh
                    command: go build
                    outputVariables:
                      - name: name
                        type: String
                        value: <+input>
                      - name: test
                        type: String
                        value: <+input>
                      - name: forSecret
                        type: Secret
                        value: <+input>
                  timeout: ""
                  type: Run
              - step:
                  identifier: gotestcoverage
                  name: go_test_coverage
                  spec:
                    command: go test -coverprofile=coverage.out ./...
                  timeout: ""
                  type: Run
              - step:
                  identifier: gotestreport
                  name: go_test_report
                  spec:
                    command: "export GOBIN=/home/harness/go/bin\n\t\texport PATH=/home/harness/go/bin:$PATH\n\t\techo $PATH\n\t\tgo install github.com/jstemmer/go-junit-report/v2@latest\n\t\tgo test -v 2>&1 ./... | go-junit-report -set-exit-code > report.xml"
                  timeout: ""
                  type: Run
              - step:
                  identifier: dockerbuild
                  name: docker_build
                  spec:
                    image: plugins/docker
                    settings:
                      dry_run: "true"
                      password: <+input>
                      repo: hello/world
                      tags: latest
                      username: <+input>
                  timeout: ""
                  type: Plugin
              - step:
                  name: rw
                  identifier: rw
                  template:
                    templateRef: run
                    versionLabel: "1"
                    templateInputs:
                      type: Run
                      spec:
                        outputVariables:
                          - name: name
                            type: String
                            value: <+input>
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Docker
            spec: {}
        type: CI
    - stage:
        name: custom
        identifier: custom
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: echo 'haha'
                    environmentVariables: []
                    outputVariables:
                      - name: haha
                        type: String
                        value: ex
                      - name: testCustom
                        type: Secret
                        value: <+input>
                  timeout: 10m
        tags: {}
